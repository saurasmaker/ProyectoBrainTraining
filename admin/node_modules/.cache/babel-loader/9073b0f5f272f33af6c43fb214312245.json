{"ast":null,"code":"/*import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\nconst url=\"https://gameserver.centic.ovh/items\";\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"Authorization\", \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkaXNwbGF5bmFtZSI6Ikp1YW5qb2ZwIiwiZ2FtZSI6Ikp1YW5qb2ZwIiwidXNlcm5hbWUiOiJKdWFuam9mcCIsImlhdCI6MTU2MTcxNjMzNH0.q4lxjs-Ztru63NHXVPhirPIUuFt849axu_PSONIiLdU\");\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};      \n\nclass App extends Component {\n\nstate={\n  data:[],\n  modalInsertar: false,\n  modalEliminar: false,\n  form:{\n    _id: '',\n    name: '',\n    image: '',\n    publish: ''\n  }\n}\n\npeticionGet=async()=>{\n\nconst response = await fetch(url, requestOptions);\nconst resultado = await response.json();\n\nconsole.log(resultado);\nthis.setState({data: resultado.data});\n}\n\npeticionPost=async()=>{\n  delete this.state.form.id;\n await axios.post(url,this.state.form).then(response=>{\n    this.modalInsertar();\n    this.peticionGet();\n  }).catch(error=>{\n    console.log(error.message);\n  })\n}\n\npeticionPut=()=>{\n  axios.put(url+this.state.form.id, this.state.form).then(response=>{\n    this.modalInsertar();\n    this.peticionGet();\n  })\n}\n\npeticionDelete=()=>{\n  axios.delete(url+this.state.form.id).then(response=>{\n    this.setState({modalEliminar: false});\n    this.peticionGet();\n  })\n}\n\nmodalInsertar=()=>{\n  this.setState({modalInsertar: !this.state.modalInsertar});\n}\n\nseleccionarPregunta=(pregunta)=>{\n  this.setState({\n    tipoModal: 'actualizar',\n    form: {\n      _id: pregunta.id,\n      name:pregunta.enunciado,\n      image: pregunta.tipo,\n      publish: pregunta.publish\n    }\n  })\n}\n\nhandleChange=async e=>{\ne.persist();\nawait this.setState({\n  form:{\n    ...this.state.form,\n    [e.target.name]: e.target.value\n  }\n});\nconsole.log(this.state.form);\n}\n\n  componentDidMount() {\n  this.peticionGet();\n  }\n  \n\n  render(){\n    const {form}=this.state;\n  return (\n    <div className=\"App\">\n    <br /><br /><br />\n  <button className=\"btn btn-success\" onClick={()=>{this.setState({form: null, tipoModal: 'insertar'}); this.modalInsertar()}}>Agregar pregunta</button>\n  <br /><br />\n    <table className=\"table \">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Tipo</th>\n          <th>Enunciado</th>\n          <th>Respuesta verdadera</th>\n          <th>Respuesta falsa 1</th>\n          <th>Respuesta falsa 2</th>\n          <th>Respuesta falsa 3</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        {this.state.data.map(pregunta=>{\n          return(\n            <tr>\n          <td>{pregunta.id}</td>\n          <td>{pregunta.nombre}</td>\n          <td>{pregunta.pais}</td>\n          <td>{new Intl.NumberFormat(\"en-EN\").format(pregunta.capital_bursatil)}</td>\n          <td>\n                <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarPregunta(pregunta); this.modalInsertar()}}><FontAwesomeIcon icon={faEdit}/></button>\n                {\"   \"}\n                <button className=\"btn btn-danger\" onClick={()=>{this.seleccionarPregunta(pregunta); this.setState({modalEliminar: true})}}><FontAwesomeIcon icon={faTrashAlt}/></button>\n                </td>\n          </tr>\n          )\n        })}\n      </tbody>\n    </table>\n\n\n\n    <Modal isOpen={this.state.modalInsertar}>\n                <ModalHeader style={{display: 'block'}}>\n                  <span style={{float: 'right'}} onClick={()=>this.modalInsertar()}>x</span>\n                </ModalHeader>\n                <ModalBody>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"id\">ID</label>\n                    <input className=\"form-control\" type=\"text\" name=\"_id\" id=\"_id\" readOnly onChange={this.handleChange} value={form?form._id: this.state.data.length+1}/>\n                    <br />\n                    <label htmlFor=\"nombre\">Enunciado</label>\n                    <input className=\"form-control\" type=\"text\" name=\"enunciado\" id=\"enunciado\" onChange={this.handleChange} value={form?form.enunciado: ''}/>\n                    <br />\n                    <label htmlFor=\"nombre\">tipo</label>\n                    <input className=\"form-control\" type=\"text\" name=\"tipo\" id=\"tipo\" onChange={this.handleChange} value={form?form.tipo: ''}/>\n                    <br />\n                    \n                  </div>\n                 \n                </ModalBody>\n\n                <ModalFooter>\n                  {this.state.tipoModal=='insertar'?\n                    <button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>\n                    Insertar\n                  </button>: <button className=\"btn btn-primary\" onClick={()=>this.peticionPut()}>\n                    Actualizar\n                  </button>\n  }\n                    <button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</button>\n                </ModalFooter>\n          </Modal>\n\n\n          <Modal isOpen={this.state.modalEliminar}>\n            <ModalBody>\n               Estás seguro que deseas eliminar a la empresa {form && form.nombre}\n            </ModalBody>\n            <ModalFooter>\n              <button className=\"btn btn-danger\" onClick={()=>this.peticionDelete()}>Sí</button>\n              <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminar: false})}>No</button>\n            </ModalFooter>\n          </Modal>\n  </div>\n\n\n\n  );\n}\n}\nexport default App;*/","map":{"version":3,"sources":["C:/Users/Gines/my-app/src/App.js"],"names":[],"mappingssourcesContent":["\n  \n/*import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\nconst url=\"https://gameserver.centic.ovh/items\";\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"Authorization\", \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkaXNwbGF5bmFtZSI6Ikp1YW5qb2ZwIiwiZ2FtZSI6Ikp1YW5qb2ZwIiwidXNlcm5hbWUiOiJKdWFuam9mcCIsImlhdCI6MTU2MTcxNjMzNH0.q4lxjs-Ztru63NHXVPhirPIUuFt849axu_PSONIiLdU\");\nvar requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  redirect: 'follow'\n};      \n\nclass App extends Component {\n\nstate={\n  data:[],\n  modalInsertar: false,\n  modalEliminar: false,\n  form:{\n    _id: '',\n    name: '',\n    image: '',\n    publish: ''\n  }\n}\n\npeticionGet=async()=>{\n\nconst response = await fetch(url, requestOptions);\nconst resultado = await response.json();\n\nconsole.log(resultado);\nthis.setState({data: resultado.data});\n}\n\npeticionPost=async()=>{\n  delete this.state.form.id;\n await axios.post(url,this.state.form).then(response=>{\n    this.modalInsertar();\n    this.peticionGet();\n  }).catch(error=>{\n    console.log(error.message);\n  })\n}\n\npeticionPut=()=>{\n  axios.put(url+this.state.form.id, this.state.form).then(response=>{\n    this.modalInsertar();\n    this.peticionGet();\n  })\n}\n\npeticionDelete=()=>{\n  axios.delete(url+this.state.form.id).then(response=>{\n    this.setState({modalEliminar: false});\n    this.peticionGet();\n  })\n}\n\nmodalInsertar=()=>{\n  this.setState({modalInsertar: !this.state.modalInsertar});\n}\n\nseleccionarPregunta=(pregunta)=>{\n  this.setState({\n    tipoModal: 'actualizar',\n    form: {\n      _id: pregunta.id,\n      name:pregunta.enunciado,\n      image: pregunta.tipo,\n      publish: pregunta.publish\n    }\n  })\n}\n\nhandleChange=async e=>{\ne.persist();\nawait this.setState({\n  form:{\n    ...this.state.form,\n    [e.target.name]: e.target.value\n  }\n});\nconsole.log(this.state.form);\n}\n\n  componentDidMount() {\n  this.peticionGet();\n  }\n  \n\n  render(){\n    const {form}=this.state;\n  return (\n    <div className=\"App\">\n    <br /><br /><br />\n  <button className=\"btn btn-success\" onClick={()=>{this.setState({form: null, tipoModal: 'insertar'}); this.modalInsertar()}}>Agregar pregunta</button>\n  <br /><br />\n    <table className=\"table \">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Tipo</th>\n          <th>Enunciado</th>\n          <th>Respuesta verdadera</th>\n          <th>Respuesta falsa 1</th>\n          <th>Respuesta falsa 2</th>\n          <th>Respuesta falsa 3</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        {this.state.data.map(pregunta=>{\n          return(\n            <tr>\n          <td>{pregunta.id}</td>\n          <td>{pregunta.nombre}</td>\n          <td>{pregunta.pais}</td>\n          <td>{new Intl.NumberFormat(\"en-EN\").format(pregunta.capital_bursatil)}</td>\n          <td>\n                <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarPregunta(pregunta); this.modalInsertar()}}><FontAwesomeIcon icon={faEdit}/></button>\n                {\"   \"}\n                <button className=\"btn btn-danger\" onClick={()=>{this.seleccionarPregunta(pregunta); this.setState({modalEliminar: true})}}><FontAwesomeIcon icon={faTrashAlt}/></button>\n                </td>\n          </tr>\n          )\n        })}\n      </tbody>\n    </table>\n\n\n\n    <Modal isOpen={this.state.modalInsertar}>\n                <ModalHeader style={{display: 'block'}}>\n                  <span style={{float: 'right'}} onClick={()=>this.modalInsertar()}>x</span>\n                </ModalHeader>\n                <ModalBody>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"id\">ID</label>\n                    <input className=\"form-control\" type=\"text\" name=\"_id\" id=\"_id\" readOnly onChange={this.handleChange} value={form?form._id: this.state.data.length+1}/>\n                    <br />\n                    <label htmlFor=\"nombre\">Enunciado</label>\n                    <input className=\"form-control\" type=\"text\" name=\"enunciado\" id=\"enunciado\" onChange={this.handleChange} value={form?form.enunciado: ''}/>\n                    <br />\n                    <label htmlFor=\"nombre\">tipo</label>\n                    <input className=\"form-control\" type=\"text\" name=\"tipo\" id=\"tipo\" onChange={this.handleChange} value={form?form.tipo: ''}/>\n                    <br />\n                    \n                  </div>\n                 \n                </ModalBody>\n\n                <ModalFooter>\n                  {this.state.tipoModal=='insertar'?\n                    <button className=\"btn btn-success\" onClick={()=>this.peticionPost()}>\n                    Insertar\n                  </button>: <button className=\"btn btn-primary\" onClick={()=>this.peticionPut()}>\n                    Actualizar\n                  </button>\n  }\n                    <button className=\"btn btn-danger\" onClick={()=>this.modalInsertar()}>Cancelar</button>\n                </ModalFooter>\n          </Modal>\n\n\n          <Modal isOpen={this.state.modalEliminar}>\n            <ModalBody>\n               Estás seguro que deseas eliminar a la empresa {form && form.nombre}\n            </ModalBody>\n            <ModalFooter>\n              <button className=\"btn btn-danger\" onClick={()=>this.peticionDelete()}>Sí</button>\n              <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminar: false})}>No</button>\n            </ModalFooter>\n          </Modal>\n  </div>\n\n\n\n  );\n}\n}\nexport default App;*/\n"]},"metadata":{},"sourceType":"module"}